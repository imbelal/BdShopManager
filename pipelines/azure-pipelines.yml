trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/WebApi/*
      - src/Application/*
      - src/Domain/*
      - src/Infrastructure/*
      - src/Common/*
      - src/UnitTest/*
      - src/IntegrationTest/*

variables:
  - name: ProjectName
    value: "WebApi"
  - name: ArtifactName
    value: "WebApi"
  - name: UnitTestProjects
    value: "**/UnitTest.csproj"
  - name: IntegrationTestProjects
    value: "**/IntegrationTest.csproj"
  - name: RESOURCE_GROUP
    value: 'bdshop'
  - name: APP_NAME
    value: 'bdshopmanager'

parameters:
  - name: slotName
    displayName: 'Custom Slot Name'
    type: string
    default: 'branch name'  # By default, the branch name will be used if not provided
  - name: deployToFeatureSlot
    displayName: 'Deploy to Feature Slot'
    type: boolean
    default: false  # Default to false, can be set to true in the UI

name: WebApi_$(Date:yyyy) -$(Date:dd)$(Rev:.r)--$(Build.SourceBranchName)

stages:
  - stage: Build_And_Tests
    jobs:
      - job: Build
        pool:
          name: Default
        steps:
          - template: templates/build-dot-net.yml
            parameters:
              projectPath: "src/$(ProjectName)"
              artifactName: "$(ArtifactName)"

      - job: Unit_Tests
        pool:
          name: Default
        steps:
          - template: templates/test-dot-net.yml
            parameters:
              testProjects: "$(UnitTestProjects)"

      - job: Integration_Tests
        pool:
          name: Default
        steps:
          - template: templates/test-dot-net.yml
            parameters:
              testProjects: "$(IntegrationTestProjects)"

      - job: Download_artifact
        displayName: 'Downloading artifact'
        pool:
          name: Default
        dependsOn: 
          - Build
          - Unit_Tests
          - Integration_Tests
        condition: and(succeeded(), eq(${{ parameters.deployToFeatureSlot }}, true))  # Use parameters directly
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: $(ArtifactName)
              downloadPath: '$(System.DefaultWorkingDirectory)/$(ArtifactName).zip'
  - stage: Feature_Deployment
    dependsOn: Build_And_Tests
    condition: succeeded()
    jobs:
      - job: Manage_Slots
        displayName: 'Manage Deployment Slots'
        pool:
          name: Default
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'MyAzureConnection'  # Name of your service connection
              scriptType: 'python'
              scriptLocation: 'inlineScript'
              inlineScript: |
                python pipelines/scripts/deployToFeatureSlot.py
              workingDirectory: $(System.DefaultWorkingDirectory)
            env:
              CUSTOM_SLOT_NAME: ${{ parameters.slotName }}
              BUILD_SOURCEBRANCHNAME: $(Build.SourceBranchName)  # Pass the branch name
              DEPLOY_TO_FEATURE_SLOT: ${{ parameters.deployToFeatureSlot }}  # Pass the checkbox value
              RESOURCE_GROUP: $(RESOURCE_GROUP)  # Use the RESOURCE_GROUP variable
              APP_NAME: $(APP_NAME)  # Use the APP_NAME variable
              DEPLOYMENT_PACKAGE: '$(build.artifactstagingdirectory)/buildProduction/$(ArtifactName).zip'  # Specify the path to your deployment package
